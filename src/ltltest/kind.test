#! /bin/sh
# Copyright (C) 2010, 2011 Laboratoire de Recherche et Developement to
# l'Epita (LRDE).
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Spot; see the file COPYING.  If not, write to the Free
# Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.


# Check for the constant_term visitor

. ./defs || exit 1

set -e

check()
{
    run 0 ../kind "$1" >out
    read word rest <out
    test "$word" = "$2"
}

check 'a'         'B&!xfLEPS'
check 'a<->b'     'BxfLEPS'
check '!a'        'B&!xfLEPS'
check '!(a|b)'    'B&xfLEPS'
check 'F(a)'      '&!xLPe'
check 'G(a)'      '&!xLPu'
check 'a U b'     '&!xfLP'
check 'a U Fb'    '&!xLP'
check 'Ga U b'    '&!xLP'
check '1 U a'     '&!xfLPe'
check 'a W b'     '&!xfLP'
check 'a W 0'     '&!xfLPu'
check 'a M b'     '&!xfLP'
check 'a M 1'     '&!xfLPe'
check 'a R b'     '&!xfLP'
check '0 R b'     '&!xfLPu'
check '{a;b}|->!Xb' '&fP'
check '{a;b}|->X!b' '&!fP'
check '{a;b}|->!Gb' '&xP'
check '{a;b}|->F!b' '&!xP'
check '{a:b:c:d}!' 'B&!xfLEPS'  # Equivalent to a&b&c&d
check 'a&b&c&d'    'B&!xfLEPS'

run 0 ../consterm '1'
run 0 ../consterm '0'
run 1 ../consterm '[*0]'
run 1 ../consterm 'a*'
run 1 ../consterm '0*'
run 1 ../consterm 'a[*0]'
run 1 ../consterm 'a[*0..]'
run 1 ../consterm 'a[*0..3]'
run 0 ../consterm 'a[*1..3]'
run 0 ../consterm 'a[*3]'
run 1 ../consterm 'a[*..4][*3]'
run 0 ../consterm 'a[*1..4][*3]'
run 1 ../consterm 'a[*1..4][*0..3]'
run 0 ../consterm '((a ; b) + c)'
run 1 ../consterm '((a ; b) + [*0])'
run 0 ../consterm '((a ; b) + [*0]) & e'
run 1 ../consterm '((a ; b) + [*0]) & [*0]'
run 1 ../consterm '((a ; b) + [*0]) & (a* + b)'
run 1 ../consterm '{{a ; b} + {[*0]}} & {a* + b}'  # test braces
run 1 ../consterm '(a + [*0]);(b + [*0]);(c + [*0])'
run 0 ../consterm '(a + [*0]);(b + e);(c + [*0])'
run 1 ../consterm '(a + [*0]);(b + e)*;(c + [*0])'
